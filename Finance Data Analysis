{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "mount_file_id": "1FRjA5W8Tz3DKKCMUJQ6H7Fb_DBB1LeSK",
      "authorship_tag": "ABX9TyNkunGsDvpwqWqJVa0HwRjz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/omkar123katare/Finance-Data-Analysis/blob/main/Finance%20Data%20Analysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "import all necessary libraries"
      ],
      "metadata": {
        "id": "DGpxABgR6Kdw"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "XfEVCc0u4buZ"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "mounting tha drive"
      ],
      "metadata": {
        "id": "cPxJippi6bln"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "z_s2YopE6bNH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### as data is in the form of excel, use read_excel command"
      ],
      "metadata": {
        "id": "n20G46X66VHg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_excel('/content/drive/MyDrive/Copy of Bank_Personal_Loan_Modelling.xlsx',1)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "9ZTailp36Row",
        "outputId": "4840303e-ecae-4b14-bd2a-a95a12779b53"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-053c7e8f-9afa-4dd1-8c1e-e3ab4edaf4d7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Age</th>\n",
              "      <th>Experience</th>\n",
              "      <th>Income</th>\n",
              "      <th>ZIP Code</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>49</td>\n",
              "      <td>91107</td>\n",
              "      <td>4</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>45</td>\n",
              "      <td>19</td>\n",
              "      <td>34</td>\n",
              "      <td>90089</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>39</td>\n",
              "      <td>15</td>\n",
              "      <td>11</td>\n",
              "      <td>94720</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>35</td>\n",
              "      <td>9</td>\n",
              "      <td>100</td>\n",
              "      <td>94112</td>\n",
              "      <td>1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>35</td>\n",
              "      <td>8</td>\n",
              "      <td>45</td>\n",
              "      <td>91330</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-053c7e8f-9afa-4dd1-8c1e-e3ab4edaf4d7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-053c7e8f-9afa-4dd1-8c1e-e3ab4edaf4d7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-053c7e8f-9afa-4dd1-8c1e-e3ab4edaf4d7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   ID  Age  Experience  ...  CD Account  Online  CreditCard\n",
              "0   1   25           1  ...           0       0           0\n",
              "1   2   45          19  ...           0       0           0\n",
              "2   3   39          15  ...           0       0           0\n",
              "3   4   35           9  ...           0       0           0\n",
              "4   5   35           8  ...           0       0           1\n",
              "\n",
              "[5 rows x 14 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Perform Exploratory Data Analysis"
      ],
      "metadata": {
        "id": "IXvgUAHg9QUb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6iSx-H6m6vcK",
        "outputId": "5e20bfe1-8fd1-4ff9-b522-730205a80c11"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5000, 14)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ID and Zipcode might be removed as they may not be useful for our analysis\n",
        "\n",
        "df.drop(['ID','ZIP Code'],axis=1,inplace=True)"
      ],
      "metadata": {
        "id": "v-qO9s2e9Sr9"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bLku3sdl9XTV",
        "outputId": "8285a5f3-612e-4778-f0ec-f939455e7b22"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Age', 'Experience', 'Income', 'Family', 'CCAvg', 'Education',\n",
              "       'Mortgage', 'Personal Loan', 'Securities Account', 'CD Account',\n",
              "       'Online', 'CreditCard'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(data = df[['Age', 'Experience', 'Income', 'Family', 'Education']])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "vRPG3ZQZAzjW",
        "outputId": "9d0c80ee-aa21-4d76-82ab-dc741d373f52"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f145700c190>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD4CAYAAAAXUaZHAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAU7ElEQVR4nO3de5BcZZ3G8eeZJEIUSQjJRioDRknQxXXN4og3ZOMlLKF2N7iLKFIyWLhZq4Cstz+AkpVyVwt3S10HFYtVZLxyWUQDghIjQV0vkAAGwiWZhQCdCrmAxFwgksxv/zjvkE6Ynpnu6cvM299P1VSfPn36vL8+c/rpt99zutsRIQBAXjpaXQAAoP4IdwDIEOEOABki3AEgQ4Q7AGRoYqsLkKTp06fH7NmzW10GAIwrq1at2hoRMwa7bUyE++zZs7Vy5cpWlwEA44rtRyvdxrAMAGSIcAeADBHuAJAhwh0AMkS4A0PYunWrzj//fD355JOtLgWoCuEODKG3t1erV69Wb29vq0sBqkK4AxVs3bpVt9xyiyJCt9xyC713jCuEO1BBb2+vBr4Su7+/n947xhXCHahg2bJleu655yRJzz33nG699dYWVwSMHOEOVLBgwQJNnFh8iHvixIk66aSTWlwRMHKEO1BBd3e3+vv7JRXDMt3d3S2uCBg5wh0AMkS4AxX09vaqo6N4inR0dHBAFeMK4Q5UsGzZMu3Zs0eStGfPHg6oYlwh3IEKFixYoEmTJkmSJk2axAFVjCuEO1BBd3e3bEsqhmU4oIrxhHAHKpg+fboWLlwo21q4cKEOP/zwVpcEjNiY+CUmYKzq7u7W+vXr6bVj3CHcgSFMnz5dl112WavLAKrGsAwAZIhwB4AMEe7AENauXauFCxeqr6+v1aUAVSHcgSFcdNFF2rlzpy688MJWlwJUhXAHKli7dq02b94sSdq0aRO9d4wrhDtQwUUXXbTfdXrvGE8Id6CCgV77gE2bNrWoEqB6w4a77SNt32b7fttrbP9Lmj/N9jLb69LlYWm+bffY7rO92vZxjX4QAID9jaTnvkfSxyPiWElvknSu7WMlXSBpeUTMlbQ8XZekhZLmpr/Fki6ve9UAgCENG+4RsTEi7krT2yU9IGmWpEWSBr7gulfSqWl6kaRvReG3kqbaPqLulQMAKqpqzN32bEl/Jel3kmZGxMZ00xOSZqbpWZIeL7tbKc07cF2Lba+0vXLLli1Vlg0AGMqIw932IZKul/SRiPhj+W0REZKimoYj4oqI6IqIrhkzZlRzVwDAMEYU7rYnqQj270bED9LsTQPDLely4NSCDZKOLLt7Z5oHAGiSkZwtY0nfkPRARHyh7Kalkga+B7Vb0o/K5p+Vzpp5k6RtZcM3AIAmGMlX/r5V0gck3Wv7njTvIkmXSrrW9jmSHpV0errtZkmnSOqTtEvSB+taMQBgWMOGe0T8SpIr3PzOQZYPSeeOsi4AwCjwCVUAyBDhDgAZItwBIEOEOwBkiHAHgAwR7gCQoZGc5w6Mez09PXX5JaUlS5aMaLk5c+aMeFmgEei5AxUceuih+12fMmVKiyoBqkfPHW2h1l70iSee+Pz0jTfeWK9ygIaj5w4MYaD3vmDBghZXAlSHnjswhFe+8pWSpIsvvrjFlQDVoecOABki3AEgQ4Q7AGSIcAeADBHuAJAhwh0AMkS4A0CGCHcAyBDhDgAZItwBIEOEOwBkiHAHgAwR7gCQIcIdADJEuANAhgh3AMgQ4Q4AGSLcASBDhDsAZIhwB4AMEe4AkCHCHQAyRLgDQIYIdwDI0LDhbvtK25tt31c27xLbG2zfk/5OKbvtQtt9th+y/TeNKhwAUNlIeu5XSTp5kPlfjIh56e9mSbJ9rKT3SXpNus9XbU+oV7EAgJEZNtwj4heSnhrh+hZJujoidkfEI5L6JB0/ivoAADUYzZj7ebZXp2Gbw9K8WZIeL1umlOa9gO3FtlfaXrlly5ZRlAEAOFCt4X65pKMlzZO0UdLnq11BRFwREV0R0TVjxowaywAADKamcI+ITRGxNyL6Jf239g29bJB0ZNminWkeAKCJagp320eUXX23pIEzaZZKep/tg2y/QtJcSXeMrkQAQLUmDreA7e9Lmi9puu2SpE9Jmm97nqSQtF7SP0tSRKyxfa2k+yXtkXRuROxtTOkAgEqGDfeIOGOQ2d8YYvnPSPrMaIoCAIwOn1AFgAwR7gCQIcIdADJEuANAhgh3AMgQ4Q4AGSLcASBDhDsAZIhwB4AMEe4AkCHCHQAyRLgDQIYIdwDIEOEOABki3AEgQ4Q7AGSIcAeADBHuAJAhwh0AMkS4A0CGCHcAyBDhDgAZItwBIEOEOwBkiHAHgAwR7gCQIcIdADJEuANAhgh3AMgQ4Q4AGSLcASBDhDsAZIhwB4AMEe4AkKFhw932lbY3276vbN4028tsr0uXh6X5tt1ju8/2atvHNbJ4AMDgRtJzv0rSyQfMu0DS8oiYK2l5ui5JCyXNTX+LJV1enzIBANUYNtwj4heSnjpg9iJJvWm6V9KpZfO/FYXfSppq+4h6FQsAGJlax9xnRsTGNP2EpJlpepakx8uWK6V5L2B7se2Vtldu2bKlxjIAAIOZONoVRETYjhrud4WkKySpq6ur6vujffX09Kivr68pba1bt06StGTJkoa3NWfOnKa0g/ZQa7hvsn1ERGxMwy6b0/wNko4sW64zzQPqpq+vT3evuVua2oTG+ouLuzfc3dh2nm7s6tF+ag33pZK6JV2aLn9UNv8821dLeqOkbWXDN0D9TJX65/e3uoq66VjBWcmor2HD3fb3Jc2XNN12SdKnVIT6tbbPkfSopNPT4jdLOkVSn6Rdkj7YgJoBAMMYNtwj4owKN71zkGVD0rmjLQoAMDq8FwSADBHuAJAhwh0AMkS4A0CGCHcAyBDhDgAZItwBIEOEOwBkiHAHgAwR7gCQIcIdADJEuANAhgh3AMgQ4Q4AGSLcASBDhDsAZIhwB4AMEe4AkCHCHQAyRLgDQIYIdwDIEOEOABma2OoC6q2np0d9fX1V369UKkmSOjs7q7rfnDlztGTJkqrbA4BGyi7ca/XMM8+0ugQAqJvswr3WXvTA/Xp6eupZDgC0RHbhjvyVSiVpm9SxIqNDRk9LpSi1ugpkJKNnBwBgAD13jDudnZ3a4i3qn9/f6lLqpmNFhzpnVXcwHxgKPXcAyBDhDgAZItwBIEOEOwBkaEwfUK3106a1WLdunaTaz5OvBp9qBdBoYzrc+/r6dPe996v/xdMa3pb/FJKkVf/3REPb6dj1VEPXDwDSGA93Sep/8TQ9e+zftrqMujn4/ptaXQKANjCqcLe9XtJ2SXsl7YmILtvTJF0jabak9ZJOj4g/jK5MAEA16nFA9e0RMS8iutL1CyQtj4i5kpan6wCAJmrE2TKLJPWm6V5JpzagDQDAEEYb7iHpVturbC9O82ZGxMY0/YSkmYPd0fZi2yttr9yyZcsoywAAlBvtAdUTImKD7T+TtMz2g+U3RkTYjsHuGBFXSLpCkrq6ugZdBgBQm1H13CNiQ7rcLOkGScdL2mT7CElKl5tHWyQAoDo199xtv0RSR0RsT9MnSfq0pKWSuiVdmi5/VGsbpVJJHbu2ZXX6YMeuJ1Uq7Wl1GQAyN5phmZmSbrA9sJ7vRcRPbN8p6Vrb50h6VNLpoy8TAFCNmsM9Ih6W9LpB5j8p6Z2jKWpAZ2enNu2emN2HmDo7X9aUtvixcKB9jflPqKL5+LFwYPwj3DPGj4UD7Ytwx/j0dJN+IHtHujykwe08LWlWg9tAWyHcMe7MmTOnaW0NfBX03FlzG9vQrOY+LuSPcMe408yDtgxRYbzil5gAIENjvufeseuppnyIyc/+UZIUBx/a0HaKH+tozqmQANrXmA735o6tbpckzT260cH7MsZWATTcmA53xlYBoDaMuQNAhsZ0zx371PpVArUYOP2vGe+c+MoCoDEI93Gir69Pa++7S0cdsrfhbb3oueIN3bPr72xoO4/tmNDQ9QPtjHAfR446ZK8+2bVj+AXHiX9f2eiPfQLtizF3AMgQ4Q4AGSLcASBD2Y2513pWSa1niHC2B4CxKLtwr9XkyZNbXQIA1E124U4vGgAyDPdclUol7dw+IavTBx/dPkEvSb/XCqC+OKAKABmi5z5OdHZ26tk9G7P7ENPBnZ2tLgPIEj13AMgQ4Q4AGSLcASBDhDsAZIhwB4AMEe4AkCFOhRxHHtvRnA8xbdpVvObPfHF/Q9t5bMcEHdPQFoD2RbiPE3PmzGlaW39KX6J28Oy5DW3nGDXvcfGFcmg3hPs40cygGGirp6enaW2OVXyhHMYrwh1tgV402g0HVAEgQ/TcgTZT6/GHUvoGz84qvw+I4w+t0bBwt32ypC9JmiDp6xFxaaPaAtpVLUFdKpX0zDPPVN3WwH2qvW+pVKq6xlpeEJq5LWo1efLkpr04NiTcbU+Q9BVJCySVJN1pe2lE3N+I9oB2tWLFCm3durWpbe7cubPq5autsVQqVR1ordgW1WrWtpAa13M/XlJfRDwsSbavlrRIEuEO1NHUqVOr7nnu3r1b/f2N/QxDuY6ODh100EFV3Wfq1KlVt8O22F+jwn2WpMfLrpckvbF8AduLJS2WpKOOOqpBZQB5u/LKK1tdwpjBtthfy86WiYgrIqIrIrpmzJjRqjIAIEuN6rlvkHRk2fXONA9NxKcygfbVqJ77nZLm2n6F7RdJep+kpQ1qC3U2efJkPpkJjHMN6blHxB7b50n6qYpTIa+MiDWNaAuV0YsG2lfDznOPiJsl3dyo9QMAKuPrBwAgQ4Q7AGSIcAeADBHuAJAhwh0AMkS4A0CGCHcAyJAjotU1yPYWSY+2ug5J0yWN7e8MbR62xT5si33YFvuMhW3x8ogY9Mu5xkS4jxW2V0ZEV6vrGAvYFvuwLfZhW+wz1rcFwzIAkCHCHQAyRLjv74pWFzCGsC32YVvsw7bYZ0xvC8bcASBD9NwBIEOEOwBkqK3C3faptsP2q1tdSy1s77V9T9nfBQ1u7+8b3UYj2d7R6hrGmkH2odmjXN/z+4jtS2x/oh511sNIni+259u+qc7tzrf9lrLrH7Z9Vj3bGImG/VjHGHWGpF+ly0+1uJZaPBMR85rRkO2JEbFU/Dxibuq6D43xfaRpz5cDzJe0Q9KvJSkivtaCGtqn5277EEknSDpHxW+6ynaH7a/aftD2Mts32z4t3fZ627fbXmX7p7aPaGH5FdmeYvsh269K179v+5/S9A7bX7S9xvZy2zPS/KNt/yQ9tl8OvJOxfZXtr9n+naT/sH227S+n22bYvt72nenvrWn+JbavtL3C9sO2l5TVdpbt1bZ/b/vbQ62nwdtofqrvf9L/+ru2nW57g+1fpxrvsP1S2wfb/qbte23fbfvtadmzbf8w7SvrbZ9n+2Npmd/anjbU9h2LbB+S9o270uNdlObPTtvqKttr0zZ7l+3/tb3O9vFpuef3kbJ1Hm37rrLrc8uvt5rtk9Nju0vSP5TN3++dh+37Bt7ZVNiX/87279L//2e2Z6blPyzpoy7eLbytfL2256V9ZbXtG2wfluavsP25tA+utf22UT/QiGiLP0lnSvpGmv61pNdLOk3FTwF2SHqZpD+keZPSMjPS8u9V8TuwrX4MeyXdU/b33jR/gaTfqHjR+knZ8iHpzDT9r5K+nKaXS5qbpt8o6edp+ipJN0makK6fXXaf70k6IU0fJemBNH1J2lYHqfg49pNp+71G0lpJ09Ny04ZaT4O21450OV/SNkmd6X/9GxUv9C+S9LCkN6TlDlXxbvbjA/9vSa+W9Jikg9P26JP0Ukkz0jo/nJb7oqSPDLV9x8LfAfvQDenxHppum54enyXNlrRH0mvTNlsl6cp02yJJPxxkH7lE0ifS9G2S5qXpz0o6fyw8X9L/8XFJc9NjuVbSTQfWn67fl7ZDpX35MO074/BDkj5fYT3l22W1pL9O05+W9F9pekXZ/U+R9LPRPv52GpY5Q9KX0vTV6fpESddFRL+kJ2zflm5/laS/kLQsdfAmSNrY3HIHNejbzIhYZvs9kr4i6XVlN/VLuiZNf0fSD1y8g3mLpOvSY5OKYB5wXUTsHaTtd0k6tuw+h6Z1SdKPI2K3pN22N0uaKekdaV1bU41PDbWeiGj0+PgdEVGSJNv3qHjSbpO0MSLuTDX+Md1+gqTL0rwHbT8q6Zi0ntsiYruk7ba3Sboxzb9X0l+OYPu22n77kO1Jkj5r+0QV+8ssFf8/SXokIu5Ny62RtDwiwva9KrbfUL4u6YO2P6YiVI+v78MYkRc8X2zPU/G41qXr35G0eJj1VNqXOyVd4+Jd/YskPTLUSmxPkTQ1Im5Ps3olXVe2yA/S5SoNv32H1Rbhnt4uv0PSa22HirAOFT2XQe8iaU1EvLlJJY6K7Q5Jfy5pl4reRKnCoqGiF/b0YC8Syc4K8zskvSkinj2gbUnaXTZrr4berwZdTxNUU+NI19Nfdr0/rXO47TvWnKniXcjrI+I52+tV9G6l4R/rUK5XcVzr55JWRcSTdau4cfZo/6HqgystmFwm6QsRsdT2fBU99NEY2L6j2T+f1y5j7qdJ+nZEvDwiZkfEkSpeZZ+S9I8uxt5nqnj7LkkPSZph+81S0bux/ZpWFD5CH5X0gKT3S/pm6o1Jxf/3tDT9fkm/Sr3TR1JPXy687sAVDuJWSecPXEk9oKH8XNJ7bB+elp9W43oa6SFJR9h+Q6rlpbYnSvqlitCT7WNUDB89NJIVjmL7tsoUSZtTsL9d0svrsdL04v1TSZdL+mY91lknD0qabfvodP2MstvWSzpOkmwfJ+kVaX6lfXmKpA1purtsPdtVDN3tJyK2SfpD2Xj6ByTdfuBy9dIu4X6GXthLv17FOHtJ0v0qhi3ukrQtIv6kIhQ/Z/v3Ksbr3qLWm+z9T+261MWB1A9J+nhE/FLSLyR9Mi2/U9Lxtu9T8c7l02n+mZLOSY9tjYox1OEskdSVDgTdr+KgUUURsUbSZyTdntr5Qi3raaT0f36vpMtSjctU9Na+KqkjDT9cI+nsNOw0UrVs31b5ror/x72SzlIRfvVcd7+KF/RWeMHzJb3oLJb043RAdXPZ8tdLmpaGoM5TMc4+1L58iYrht1Xa/6t/b5T07oEDqgfU1C3pP22vljRP+56Tddf2Xz8wMN6bXpXvkPTWiHii1XXVg+0dEXHI8EsC9ZfOEJkSERe3upZ21BZj7sO4yfZUFQdE/i2XYAdayfYNko5W8Y4RLdD2PXcAyFG7jLkDQFsh3AEgQ4Q7AGSIcAeADBHuAJCh/wck6Zg3efL7MwAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "id": "fHEvFzrs9tKy",
        "outputId": "fbb4281b-8900-4947-8555-51ba8e4389c1"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-488a27e1-0c3f-4295-8f6b-b6ea0edcaa81\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Experience</th>\n",
              "      <th>Income</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.00000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>45.338400</td>\n",
              "      <td>20.104600</td>\n",
              "      <td>73.774200</td>\n",
              "      <td>2.396400</td>\n",
              "      <td>1.937913</td>\n",
              "      <td>1.881000</td>\n",
              "      <td>56.498800</td>\n",
              "      <td>0.096000</td>\n",
              "      <td>0.104400</td>\n",
              "      <td>0.06040</td>\n",
              "      <td>0.596800</td>\n",
              "      <td>0.294000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>11.463166</td>\n",
              "      <td>11.467954</td>\n",
              "      <td>46.033729</td>\n",
              "      <td>1.147663</td>\n",
              "      <td>1.747666</td>\n",
              "      <td>0.839869</td>\n",
              "      <td>101.713802</td>\n",
              "      <td>0.294621</td>\n",
              "      <td>0.305809</td>\n",
              "      <td>0.23825</td>\n",
              "      <td>0.490589</td>\n",
              "      <td>0.455637</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>23.000000</td>\n",
              "      <td>-3.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>35.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>39.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.700000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>45.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>64.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.500000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>55.000000</td>\n",
              "      <td>30.000000</td>\n",
              "      <td>98.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.500000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>101.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>67.000000</td>\n",
              "      <td>43.000000</td>\n",
              "      <td>224.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>635.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-488a27e1-0c3f-4295-8f6b-b6ea0edcaa81')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-488a27e1-0c3f-4295-8f6b-b6ea0edcaa81 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-488a27e1-0c3f-4295-8f6b-b6ea0edcaa81');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "               Age   Experience  ...       Online   CreditCard\n",
              "count  5000.000000  5000.000000  ...  5000.000000  5000.000000\n",
              "mean     45.338400    20.104600  ...     0.596800     0.294000\n",
              "std      11.463166    11.467954  ...     0.490589     0.455637\n",
              "min      23.000000    -3.000000  ...     0.000000     0.000000\n",
              "25%      35.000000    10.000000  ...     0.000000     0.000000\n",
              "50%      45.000000    20.000000  ...     1.000000     0.000000\n",
              "75%      55.000000    30.000000  ...     1.000000     1.000000\n",
              "max      67.000000    43.000000  ...     1.000000     1.000000\n",
              "\n",
              "[8 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Five point summary suggest that Experience has negative value(This should be fixed)."
      ],
      "metadata": {
        "id": "YfFdYuJMKMmo"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "we can see the Min, Max, mean and std deviation for all key attributes of the dataset\n",
        "Income has too much noise and slightly skewed right, Age and exp are equally distributed."
      ],
      "metadata": {
        "id": "7vojBXcvKOsY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "check if there is skewness in data or not!!"
      ],
      "metadata": {
        "id": "4iyvRBkCKRPT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.skew()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mEeeHzLAJw-8",
        "outputId": "f5d5961b-7ab4-433b-befd-f454d8ec4571"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Age                  -0.029341\n",
              "Experience           -0.026325\n",
              "Income                0.841339\n",
              "Family                0.155221\n",
              "CCAvg                 1.598457\n",
              "Education             0.227093\n",
              "Mortgage              2.104002\n",
              "Personal Loan         2.743607\n",
              "Securities Account    2.588268\n",
              "CD Account            3.691714\n",
              "Online               -0.394785\n",
              "CreditCard            0.904589\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lNHsMDVpKTt8",
        "outputId": "ee733256-6aae-40e3-afac-94f9781523d2"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Age                     int64\n",
              "Experience              int64\n",
              "Income                  int64\n",
              "Family                  int64\n",
              "CCAvg                 float64\n",
              "Education               int64\n",
              "Mortgage                int64\n",
              "Personal Loan           int64\n",
              "Securities Account      int64\n",
              "CD Account              int64\n",
              "Online                  int64\n",
              "CreditCard              int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "now visualise Skewness by distribution"
      ],
      "metadata": {
        "id": "s59vIz9PKgeX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.hist(figsize=(20,20))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "wcaqc_YNKeRg",
        "outputId": "2cdeabb5-8347-4038-fb37-41f04204aead"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f1451aefa10>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f1451b7ad90>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f1451a632d0>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f1451a998d0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f1451a4fed0>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f1451a11510>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f14519c8b90>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f145198b110>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f145198b150>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f1451940850>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f14518b9390>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7f145210a210>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 23
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1440 with 12 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "INFERENCE from Histogram"
      ],
      "metadata": {
        "id": "ZzjPylqIKv08"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "1.Age & Experience are to an extent equally distributed\n",
        "2.Income & Credit card spending are skewed to the left\n",
        "3.We have more Undergraduates than Graduate and Advanced & Professional\n",
        "4.60% of customers have enabled online banking and went digital"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 130
        },
        "id": "-1PIMM2OKkIi",
        "outputId": "cecfa8ca-0a5b-42f9-b781-50c0205afa5b"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-24-bc07f37b96c0>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    1.Age & Experience are to an extent equally distributed\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "-E8s4jnKKx7e"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.distplot(df['Experience'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 388
        },
        "id": "j9YRZWqALbJN",
        "outputId": "4a9256eb-9256-4882-9f97-46c1e02fa74a"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning:\n",
            "\n",
            "`distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f1452b31950>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Experience'].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1-UmY1xLLc_j",
        "outputId": "5e6eaa31-c078-4ab2-99e3-b6b861310c6d"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "20.1046"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Negative_exp=df[df['Experience']<0]\n",
        "Negative_exp.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "Dbfz_Z8VLfi7",
        "outputId": "18227642-1a35-47c1-b25b-4e52020a3b61"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-78e935f3-882c-4f76-8eb2-af024dfc5177\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Experience</th>\n",
              "      <th>Income</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>25</td>\n",
              "      <td>-1</td>\n",
              "      <td>113</td>\n",
              "      <td>4</td>\n",
              "      <td>2.30</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>226</th>\n",
              "      <td>24</td>\n",
              "      <td>-1</td>\n",
              "      <td>39</td>\n",
              "      <td>2</td>\n",
              "      <td>1.70</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>315</th>\n",
              "      <td>24</td>\n",
              "      <td>-2</td>\n",
              "      <td>51</td>\n",
              "      <td>3</td>\n",
              "      <td>0.30</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>451</th>\n",
              "      <td>28</td>\n",
              "      <td>-2</td>\n",
              "      <td>48</td>\n",
              "      <td>2</td>\n",
              "      <td>1.75</td>\n",
              "      <td>3</td>\n",
              "      <td>89</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>524</th>\n",
              "      <td>24</td>\n",
              "      <td>-1</td>\n",
              "      <td>75</td>\n",
              "      <td>4</td>\n",
              "      <td>0.20</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78e935f3-882c-4f76-8eb2-af024dfc5177')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-78e935f3-882c-4f76-8eb2-af024dfc5177 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-78e935f3-882c-4f76-8eb2-af024dfc5177');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "     Age  Experience  Income  ...  CD Account  Online  CreditCard\n",
              "89    25          -1     113  ...           0       0           1\n",
              "226   24          -1      39  ...           0       0           0\n",
              "315   24          -2      51  ...           0       1           0\n",
              "451   28          -2      48  ...           0       1           0\n",
              "524   24          -1      75  ...           0       1           0\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Negative_exp['Experience'].mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zHGSE6rPLoAA",
        "outputId": "32051ded-1837-4efa-a0a4-2389ac7961c2"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-1.4423076923076923"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Negative_exp.size"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qusuEmFSLv-I",
        "outputId": "3a02756b-ec4a-4317-a6c1-dbbf431649b9"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "624"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('There are {} records which has negative values for experience, approx {} %'.format(Negative_exp.size , ((Negative_exp.size/df.size)*100)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vSkabgTgLxeq",
        "outputId": "0da87722-81c4-45fc-9512-28378e4dda23"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "There are 624 records which has negative values for experience, approx 1.04 %\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data=df.copy()"
      ],
      "metadata": {
        "id": "C9bZTWEhLziu"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "6torS6vEL1Yo",
        "outputId": "43ab69e6-3832-4742-ad7d-bacd7a87ba2a"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-b830f642-81d0-4cda-9e45-56b8fa8558e4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Experience</th>\n",
              "      <th>Income</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>25</td>\n",
              "      <td>1</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>45</td>\n",
              "      <td>19</td>\n",
              "      <td>34</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>39</td>\n",
              "      <td>15</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35</td>\n",
              "      <td>9</td>\n",
              "      <td>100</td>\n",
              "      <td>1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35</td>\n",
              "      <td>8</td>\n",
              "      <td>45</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b830f642-81d0-4cda-9e45-56b8fa8558e4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b830f642-81d0-4cda-9e45-56b8fa8558e4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b830f642-81d0-4cda-9e45-56b8fa8558e4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   Age  Experience  Income  ...  CD Account  Online  CreditCard\n",
              "0   25           1      49  ...           0       0           0\n",
              "1   45          19      34  ...           0       0           0\n",
              "2   39          15      11  ...           0       0           0\n",
              "3   35           9     100  ...           0       0           0\n",
              "4   35           8      45  ...           0       0           1\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "use numpy where function to change the negative values to mean value"
      ],
      "metadata": {
        "id": "oY807vcNMDHy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['Experience']=np.where(data['Experience']<0,data['Experience'].mean(),data['Experience'])"
      ],
      "metadata": {
        "id": "e5T32rMaMDcR"
      },
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data[data['Experience']<0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 49
        },
        "id": "9fnqXYGnMF2s",
        "outputId": "9e9788a8-b3fa-47fd-9599-da5ecdfa66bb"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-ea42733b-a819-4435-b3e7-6a0277eaafe4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Experience</th>\n",
              "      <th>Income</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea42733b-a819-4435-b3e7-6a0277eaafe4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ea42733b-a819-4435-b3e7-6a0277eaafe4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ea42733b-a819-4435-b3e7-6a0277eaafe4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [Age, Experience, Income, Family, CCAvg, Education, Mortgage, Personal Loan, Securities Account, CD Account, Online, CreditCard]\n",
              "Index: []"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10,6))\n",
        "sns.heatmap(df.corr(),annot=True)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 477
        },
        "id": "4-0P1jDxMHhq",
        "outputId": "db73a22f-e6e3-4bdb-ac77-ebc941537f9a"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f14528429d0>"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x432 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We could see that Age & Experience are very strongly correlated,\n",
        "Hence it is fine for us to go with Age and drop Experience to avoid multi-colinearity issue."
      ],
      "metadata": {
        "id": "Uipsj6FtMQIh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data=data.drop(['Experience'],axis=1)"
      ],
      "metadata": {
        "id": "vulaIK1GMJyE"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "LleX1XoKMSMh",
        "outputId": "982a41bc-f758-4221-afb8-78bf22b186d2"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-68ee7139-5939-4a84-b9be-bca0007b4622\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Income</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>25</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>45</td>\n",
              "      <td>34</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>39</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35</td>\n",
              "      <td>100</td>\n",
              "      <td>1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35</td>\n",
              "      <td>45</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68ee7139-5939-4a84-b9be-bca0007b4622')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-68ee7139-5939-4a84-b9be-bca0007b4622 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-68ee7139-5939-4a84-b9be-bca0007b4622');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   Age  Income  Family  ...  CD Account  Online  CreditCard\n",
              "0   25      49       4  ...           0       0           0\n",
              "1   45      34       3  ...           0       0           0\n",
              "2   39      11       1  ...           0       0           0\n",
              "3   35     100       1  ...           0       0           0\n",
              "4   35      45       4  ...           0       0           1\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['Education'].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pDbkxBv9MT6O",
        "outputId": "14b5c6c1-5fef-406a-c8ba-05c9db1588c1"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([1, 2, 3])"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def mark(x):\n",
        "    if x==1:\n",
        "        return 'Undergrad'\n",
        "    elif x==2:\n",
        "        return 'Graduate'\n",
        "    else:\n",
        "        return 'Advanced/Professional'"
      ],
      "metadata": {
        "id": "J1eD99AQMWSN"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data['Edu_mark']=data['Education'].apply(mark)"
      ],
      "metadata": {
        "id": "24ZRNZqVMYvy"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "xjoZr-7CMg1j",
        "outputId": "a350913f-9a2a-48be-97b8-4deadaece251"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-cf3ec07b-df27-43d6-861a-b719468eb00e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Income</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "      <th>Edu_mark</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>25</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Undergrad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>45</td>\n",
              "      <td>34</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Undergrad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>39</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Undergrad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35</td>\n",
              "      <td>100</td>\n",
              "      <td>1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Graduate</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35</td>\n",
              "      <td>45</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Graduate</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf3ec07b-df27-43d6-861a-b719468eb00e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cf3ec07b-df27-43d6-861a-b719468eb00e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cf3ec07b-df27-43d6-861a-b719468eb00e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   Age  Income  Family  CCAvg  ...  CD Account  Online  CreditCard   Edu_mark\n",
              "0   25      49       4    1.6  ...           0       0           0  Undergrad\n",
              "1   45      34       3    1.5  ...           0       0           0  Undergrad\n",
              "2   39      11       1    1.0  ...           0       0           0  Undergrad\n",
              "3   35     100       1    2.7  ...           0       0           0   Graduate\n",
              "4   35      45       4    1.0  ...           0       0           1   Graduate\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "EDU_dis=data.groupby('Edu_mark')['Age'].count()"
      ],
      "metadata": {
        "id": "7r32sfsRMiNu"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig=px.pie(data,values=EDU_dis, names=EDU_dis.index,title='Pie CHart')\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "VN7Sf-2ZMkWK",
        "outputId": "6596a485-e8ca-41a7-8f5e-ee2f3af9e59e"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>\n",
              "            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n",
              "                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n",
              "            <div id=\"9be30ee7-7ccb-42fe-916d-a1f88b68c775\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
              "            <script type=\"text/javascript\">\n",
              "                \n",
              "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
              "                    \n",
              "                if (document.getElementById(\"9be30ee7-7ccb-42fe-916d-a1f88b68c775\")) {\n",
              "                    Plotly.newPlot(\n",
              "                        '9be30ee7-7ccb-42fe-916d-a1f88b68c775',\n",
              "                        [{\"domain\": {\"x\": [0.0, 1.0], \"y\": [0.0, 1.0]}, \"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"label=%{label}<br>value=%{value}\", \"labels\": [\"Advanced/Professional\", \"Graduate\", \"Undergrad\"], \"legendgroup\": \"\", \"name\": \"\", \"showlegend\": true, \"type\": \"pie\", \"values\": [1501, 1403, 2096]}],\n",
              "                        {\"legend\": {\"tracegroupgap\": 0}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"text\": \"Pie CHart\"}},\n",
              "                        {\"responsive\": true}\n",
              "                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('9be30ee7-7ccb-42fe-916d-a1f88b68c775');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })\n",
              "                };\n",
              "                \n",
              "            </script>\n",
              "        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Inference :We could see that We have more Undergraduates 41.92% than graduates(28.06%) & Advanced Professional(30.02%)"
      ],
      "metadata": {
        "id": "MiEKUCfNM0vG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t_9ilEmvMqoR",
        "outputId": "15ed54c3-b5dc-4a66-c9b1-6bced067362d"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Age', 'Income', 'Family', 'CCAvg', 'Education', 'Mortgage',\n",
              "       'Personal Loan', 'Securities Account', 'CD Account', 'Online',\n",
              "       'CreditCard', 'Edu_mark'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Lets Explore the account holder's distribution"
      ],
      "metadata": {
        "id": "-Xo1sFf-M9Rc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def Security_CD(row):\n",
        "    if (row['Securities Account']==1) & (row['CD Account']==1):\n",
        "        return 'Holds Securites & Deposit'\n",
        "    elif (row['Securities Account']==0) & (row['CD Account']==0):\n",
        "        return 'Does not Holds Securites or Deposit'\n",
        "    elif (row['Securities Account']==1) & (row['CD Account']==0):\n",
        "        return ' Holds only Securites '\n",
        "    elif (row['Securities Account']==0) & (row['CD Account']==1):\n",
        "        return ' Holds only Deposit'"
      ],
      "metadata": {
        "id": "5fRpdJvyM6d4"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data['Account_holder_category']=data.apply(Security_CD,axis=1)"
      ],
      "metadata": {
        "id": "VwlLEkzGNDFa"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "gRnm7fQnNEzf",
        "outputId": "8f143895-4a5a-4ee7-96b6-424f3d7c217f"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-7bc6a5aa-106d-4928-ab89-3a1059534437\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Income</th>\n",
              "      <th>Family</th>\n",
              "      <th>CCAvg</th>\n",
              "      <th>Education</th>\n",
              "      <th>Mortgage</th>\n",
              "      <th>Personal Loan</th>\n",
              "      <th>Securities Account</th>\n",
              "      <th>CD Account</th>\n",
              "      <th>Online</th>\n",
              "      <th>CreditCard</th>\n",
              "      <th>Edu_mark</th>\n",
              "      <th>Account_holder_category</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>25</td>\n",
              "      <td>49</td>\n",
              "      <td>4</td>\n",
              "      <td>1.6</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Undergrad</td>\n",
              "      <td>Holds only Securites</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>45</td>\n",
              "      <td>34</td>\n",
              "      <td>3</td>\n",
              "      <td>1.5</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Undergrad</td>\n",
              "      <td>Holds only Securites</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>39</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Undergrad</td>\n",
              "      <td>Does not Holds Securites or Deposit</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>35</td>\n",
              "      <td>100</td>\n",
              "      <td>1</td>\n",
              "      <td>2.7</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>Does not Holds Securites or Deposit</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>35</td>\n",
              "      <td>45</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>Graduate</td>\n",
              "      <td>Does not Holds Securites or Deposit</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7bc6a5aa-106d-4928-ab89-3a1059534437')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7bc6a5aa-106d-4928-ab89-3a1059534437 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7bc6a5aa-106d-4928-ab89-3a1059534437');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   Age  Income  ...   Edu_mark              Account_holder_category\n",
              "0   25      49  ...  Undergrad                Holds only Securites \n",
              "1   45      34  ...  Undergrad                Holds only Securites \n",
              "2   39      11  ...  Undergrad  Does not Holds Securites or Deposit\n",
              "3   35     100  ...   Graduate  Does not Holds Securites or Deposit\n",
              "4   35      45  ...   Graduate  Does not Holds Securites or Deposit\n",
              "\n",
              "[5 rows x 13 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "values=data['Account_holder_category'].value_counts()"
      ],
      "metadata": {
        "id": "A7A_dGwxNWQa"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig=px.pie(data,values=values, names=values.index,title='Pie CHart')\n",
        "fig.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "CenQG7p3NHTW",
        "outputId": "919147eb-d91f-42fc-8dda-cb0d24685d6c"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>\n",
              "            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n",
              "                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n",
              "            <div id=\"6370b03c-e020-48d6-8b3d-c449c9a11e64\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
              "            <script type=\"text/javascript\">\n",
              "                \n",
              "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
              "                    \n",
              "                if (document.getElementById(\"6370b03c-e020-48d6-8b3d-c449c9a11e64\")) {\n",
              "                    Plotly.newPlot(\n",
              "                        '6370b03c-e020-48d6-8b3d-c449c9a11e64',\n",
              "                        [{\"domain\": {\"x\": [0.0, 1.0], \"y\": [0.0, 1.0]}, \"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"label=%{label}<br>value=%{value}\", \"labels\": [\"Does not Holds Securites or Deposit\", \" Holds only Securites \", \" Holds only Deposit\", \"Holds Securites & Deposit\"], \"legendgroup\": \"\", \"name\": \"\", \"showlegend\": true, \"type\": \"pie\", \"values\": [4323, 375, 155, 147]}],\n",
              "                        {\"legend\": {\"tracegroupgap\": 0}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"title\": {\"text\": \"Pie CHart\"}},\n",
              "                        {\"responsive\": true}\n",
              "                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('6370b03c-e020-48d6-8b3d-c449c9a11e64');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })\n",
              "                };\n",
              "                \n",
              "            </script>\n",
              "        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "We could see that alomst 87% of customers do not hold any securities or deposit, and 3 % hold both securities as well as deposit. It will be good if we encourage those 87% to open any of these account as it will improve the assests of the bank"
      ],
      "metadata": {
        "id": "8r8sOSGJNekw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "px.box(data,x='Edu_mark',y='Income',facet_col='Personal Loan')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "5jDR0kbVNaJc",
        "outputId": "21b8d63d-054a-44a4-b544-19d0488f0851"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>\n",
              "            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>\n",
              "                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>    \n",
              "            <div id=\"f3c5c4a6-4140-444c-8e09-1d65c6d6af00\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>\n",
              "            <script type=\"text/javascript\">\n",
              "                \n",
              "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
              "                    \n",
              "                if (document.getElementById(\"f3c5c4a6-4140-444c-8e09-1d65c6d6af00\")) {\n",
              "                    Plotly.newPlot(\n",
              "                        'f3c5c4a6-4140-444c-8e09-1d65c6d6af00',\n",
              "                        [{\"alignmentgroup\": \"True\", \"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Personal Loan=0<br>Edu_mark=%{x}<br>Income=%{y}\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"notched\": false, \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"type\": \"box\", \"x\": [\"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\"], \"x0\": \" \", \"xaxis\": \"x\", \"y\": [49, 34, 11, 100, 45, 29, 72, 22, 81, 105, 45, 114, 40, 112, 22, 81, 21, 25, 63, 62, 43, 152, 29, 83, 158, 48, 35, 29, 41, 18, 50, 81, 121, 71, 80, 84, 60, 45, 104, 52, 43, 81, 49, 8, 131, 72, 44, 139, 29, 93, 188, 39, 125, 22, 32, 105, 131, 105, 45, 60, 20, 115, 69, 130, 85, 135, 12, 29, 19, 41, 40, 82, 50, 18, 109, 42, 78, 51, 113, 29, 34, 64, 121, 48, 80, 161, 94, 15, 74, 30, 44, 22, 38, 35, 69, 43, 32, 49, 9, 45, 82, 92, 39, 81, 35, 61, 73, 112, 12, 38, 73, 84, 78, 80, 115, 82, 74, 70, 81, 51, 39, 98, 45, 49, 128, 42, 18, 31, 58, 48, 54, 70, 124, 84, 83, 163, 42, 118, 24, 22, 58, 60, 15, 83, 79, 41, 80, 52, 70, 92, 43, 21, 23, 13, 112, 138, 11, 171, 42, 85, 44, 65, 24, 11, 38, 10, 135, 63, 115, 45, 169, 112, 93, 29, 85, 21, 144, 13, 165, 9, 59, 29, 20, 68, 65, 61, 91, 31, 71, 73, 20, 55, 69, 155, 94, 92, 125, 74, 72, 61, 25, 83, 104, 41, 58, 93, 39, 148, 53, 71, 92, 61, 38, 58, 80, 71, 89, 83, 28, 52, 70, 71, 75, 78, 25, 60, 99, 55, 29, 53, 138, 42, 99, 18, 24, 55, 58, 33, 74, 38, 23, 61, 81, 129, 33, 63, 70, 45, 65, 74, 50, 22, 30, 21, 155, 64, 65, 71, 40, 69, 69, 45, 62, 24, 80, 8, 38, 93, 55, 64, 122, 70, 81, 70, 150, 152, 22, 22, 79, 33, 128, 91, 39, 121, 21, 41, 45, 51, 110, 20, 64, 89, 80, 114, 49, 191, 78, 28, 42, 140, 45, 122, 65, 68, 153, 89, 91, 55, 118, 22, 63, 12, 50, 43, 113, 91, 55, 173, 71, 24, 42, 141, 32, 55, 153, 113, 30, 29, 35, 98, 30, 58, 25, 19, 44, 20, 98, 90, 61, 40, 38, 28, 34, 73, 53, 21, 40, 41, 82, 155, 45, 9, 48, 18, 80, 64, 29, 48, 23, 84, 30, 93, 39, 60, 133, 125, 58, 89, 82, 110, 54, 89, 42, 41, 38, 85, 83, 33, 50, 58, 145, 161, 38, 28, 75, 35, 24, 78, 113, 75, 91, 31, 45, 80, 50, 31, 29, 59, 43, 29, 91, 65, 22, 71, 60, 60, 69, 48, 21, 53, 29, 60, 42, 69, 20, 200, 141, 81, 35, 13, 39, 21, 10, 84, 30, 31, 114, 53, 24, 150, 132, 68, 53, 30, 113, 15, 84, 88, 43, 43, 90, 34, 38, 173, 160, 44, 83, 94, 43, 42, 34, 39, 70, 39, 44, 44, 32, 15, 118, 62, 82, 54, 48, 74, 113, 81, 43, 34, 48, 54, 75, 72, 39, 75, 79, 205, 65, 82, 21, 50, 39, 101, 41, 132, 43, 11, 21, 109, 141, 81, 54, 164, 28, 68, 44, 61, 35, 54, 14, 52, 101, 149, 35, 21, 118, 38, 24, 59, 41, 85, 12, 32, 79, 28, 41, 70, 53, 128, 50, 80, 93, 48, 149, 49, 88, 22, 55, 72, 38, 114, 83, 101, 94, 40, 128, 39, 51, 79, 48, 85, 41, 125, 11, 103, 141, 38, 135, 28, 70, 41, 81, 55, 24, 81, 32, 129, 108, 180, 139, 33, 74, 42, 73, 114, 92, 34, 54, 64, 42, 70, 51, 71, 35, 40, 18, 32, 35, 120, 31, 35, 32, 85, 139, 103, 152, 33, 84, 61, 64, 34, 82, 58, 92, 78, 13, 81, 23, 35, 79, 165, 52, 49, 64, 61, 112, 72, 18, 41, 61, 23, 22, 59, 33, 11, 204, 61, 103, 51, 12, 82, 164, 48, 38, 65, 71, 18, 52, 48, 30, 40, 112, 115, 63, 85, 59, 68, 84, 62, 141, 129, 30, 148, 25, 21, 72, 59, 83, 10, 84, 98, 32, 31, 94, 21, 110, 38, 39, 61, 92, 119, 53, 18, 90, 140, 90, 85, 80, 53, 49, 80, 82, 195, 22, 81, 40, 154, 49, 85, 21, 14, 60, 138, 98, 22, 49, 102, 45, 82, 81, 35, 59, 52, 84, 85, 65, 89, 81, 38, 72, 78, 71, 120, 39, 23, 12, 92, 42, 160, 98, 164, 42, 10, 31, 58, 65, 98, 150, 44, 15, 82, 61, 38, 39, 173, 8, 51, 62, 34, 44, 162, 64, 111, 41, 52, 65, 45, 35, 65, 38, 42, 45, 145, 33, 60, 45, 72, 34, 23, 45, 28, 81, 72, 49, 31, 63, 142, 74, 24, 29, 79, 94, 121, 54, 73, 71, 29, 93, 73, 19, 58, 39, 23, 29, 155, 90, 113, 42, 30, 19, 30, 28, 15, 70, 10, 22, 70, 61, 161, 29, 35, 48, 44, 88, 40, 21, 58, 59, 74, 84, 58, 154, 185, 78, 55, 30, 74, 118, 82, 29, 53, 43, 59, 84, 21, 63, 51, 24, 95, 59, 51, 28, 154, 15, 55, 149, 79, 68, 78, 34, 184, 85, 200, 64, 88, 42, 91, 38, 28, 32, 31, 22, 74, 22, 43, 43, 112, 9, 81, 131, 19, 62, 19, 8, 30, 80, 22, 33, 64, 60, 81, 45, 112, 180, 28, 14, 43, 88, 78, 68, 144, 30, 120, 24, 78, 44, 73, 90, 58, 75, 50, 85, 54, 24, 45, 68, 48, 114, 52, 142, 15, 118, 101, 84, 32, 64, 81, 28, 93, 42, 45, 49, 69, 94, 18, 8, 55, 85, 62, 65, 138, 103, 152, 25, 98, 39, 40, 58, 62, 69, 40, 61, 30, 29, 41, 109, 50, 43, 108, 20, 112, 25, 42, 29, 84, 81, 55, 40, 78, 51, 50, 21, 79, 84, 34, 73, 90, 23, 54, 49, 51, 8, 62, 25, 63, 24, 11, 23, 33, 39, 113, 195, 105, 40, 61, 75, 122, 75, 59, 24, 39, 145, 24, 20, 85, 65, 11, 40, 54, 95, 94, 79, 48, 70, 40, 44, 43, 29, 114, 52, 13, 95, 84, 49, 181, 70, 79, 61, 121, 34, 183, 51, 70, 39, 84, 122, 145, 98, 79, 38, 49, 38, 91, 29, 172, 58, 191, 90, 55, 28, 42, 9, 65, 83, 38, 13, 75, 91, 99, 71, 111, 108, 158, 81, 12, 21, 55, 42, 81, 13, 132, 99, 23, 40, 112, 138, 113, 190, 38, 32, 104, 43, 45, 35, 42, 58, 14, 98, 90, 65, 19, 35, 71, 31, 43, 24, 58, 115, 168, 128, 138, 81, 41, 71, 8, 42, 62, 22, 38, 24, 50, 94, 43, 48, 52, 84, 131, 44, 78, 15, 38, 84, 122, 98, 80, 165, 121, 20, 11, 45, 14, 30, 45, 80, 25, 144, 84, 22, 33, 60, 81, 63, 12, 15, 39, 44, 110, 41, 59, 39, 35, 80, 81, 31, 93, 45, 40, 80, 20, 41, 31, 35, 40, 84, 53, 85, 138, 71, 113, 23, 62, 14, 60, 94, 83, 61, 92, 20, 194, 74, 84, 98, 52, 55, 64, 128, 50, 54, 129, 82, 100, 44, 81, 71, 28, 80, 90, 74, 14, 23, 153, 38, 112, 145, 28, 31, 195, 50, 71, 21, 35, 42, 78, 73, 53, 51, 40, 178, 35, 123, 48, 45, 15, 79, 63, 30, 32, 64, 84, 21, 99, 35, 180, 42, 42, 82, 55, 79, 48, 93, 23, 50, 85, 35, 29, 84, 20, 14, 179, 48, 74, 53, 83, 171, 85, 38, 85, 79, 69, 43, 33, 42, 40, 43, 20, 65, 84, 45, 109, 34, 162, 105, 22, 82, 105, 62, 82, 72, 38, 25, 20, 80, 84, 33, 55, 33, 43, 45, 141, 69, 78, 84, 51, 75, 20, 63, 44, 100, 12, 68, 48, 82, 52, 39, 40, 54, 32, 64, 92, 40, 60, 85, 21, 35, 52, 128, 195, 68, 55, 55, 80, 123, 90, 61, 41, 43, 71, 25, 141, 22, 145, 49, 109, 80, 82, 52, 85, 148, 160, 39, 25, 33, 38, 85, 48, 15, 94, 120, 60, 145, 29, 78, 59, 80, 180, 8, 23, 79, 78, 64, 64, 43, 32, 179, 8, 63, 40, 99, 159, 39, 99, 18, 38, 133, 84, 60, 18, 73, 125, 74, 35, 113, 52, 18, 25, 50, 75, 92, 33, 65, 44, 183, 175, 28, 49, 45, 22, 120, 175, 101, 104, 58, 80, 45, 134, 58, 20, 25, 55, 155, 30, 39, 73, 41, 34, 21, 11, 154, 19, 101, 24, 131, 105, 52, 21, 45, 39, 192, 195, 83, 34, 49, 60, 41, 72, 31, 73, 89, 19, 63, 104, 40, 92, 72, 44, 73, 63, 69, 42, 88, 98, 12, 12, 24, 25, 131, 50, 21, 55, 58, 72, 83, 93, 38, 55, 11, 85, 124, 129, 180, 74, 83, 33, 21, 35, 105, 103, 75, 33, 52, 89, 63, 44, 29, 29, 22, 53, 24, 153, 31, 21, 180, 82, 90, 99, 53, 18, 70, 100, 125, 68, 55, 84, 13, 33, 89, 93, 68, 85, 73, 83, 24, 102, 53, 175, 28, 14, 34, 64, 84, 42, 63, 100, 22, 20, 21, 25, 20, 81, 119, 74, 42, 73, 44, 141, 14, 33, 83, 89, 39, 83, 108, 21, 102, 48, 32, 43, 35, 184, 140, 32, 149, 15, 71, 108, 122, 40, 198, 79, 84, 31, 12, 88, 29, 201, 20, 15, 155, 25, 200, 101, 19, 188, 8, 59, 72, 55, 24, 19, 71, 54, 28, 25, 51, 88, 125, 79, 31, 131, 70, 38, 83, 59, 121, 42, 32, 29, 40, 25, 21, 79, 52, 61, 25, 25, 80, 55, 23, 60, 54, 44, 33, 45, 55, 134, 44, 149, 22, 74, 62, 9, 9, 15, 28, 83, 73, 42, 34, 32, 68, 82, 19, 60, 192, 190, 34, 44, 23, 43, 139, 118, 70, 42, 143, 28, 45, 78, 121, 59, 64, 15, 10, 61, 50, 79, 35, 11, 128, 55, 79, 18, 91, 9, 62, 59, 25, 54, 125, 35, 113, 25, 45, 119, 30, 79, 23, 171, 74, 103, 99, 43, 23, 91, 93, 154, 21, 65, 15, 52, 30, 42, 20, 60, 54, 60, 41, 30, 21, 105, 65, 20, 161, 82, 43, 61, 90, 90, 21, 118, 44, 99, 98, 69, 82, 112, 123, 78, 59, 78, 49, 82, 185, 163, 19, 115, 81, 93, 184, 50, 55, 13, 29, 72, 83, 98, 43, 34, 10, 201, 85, 50, 91, 112, 98, 115, 22, 101, 83, 52, 54, 69, 64, 53, 19, 31, 63, 25, 22, 78, 81, 41, 62, 35, 30, 51, 140, 73, 40, 69, 82, 38, 23, 55, 58, 29, 39, 39, 30, 58, 62, 62, 19, 38, 84, 78, 22, 81, 32, 89, 121, 42, 130, 30, 114, 155, 50, 34, 94, 114, 89, 49, 115, 148, 72, 114, 11, 63, 113, 80, 54, 32, 11, 141, 84, 18, 20, 55, 31, 114, 52, 18, 55, 29, 30, 38, 122, 183, 41, 38, 61, 80, 22, 124, 44, 75, 78, 31, 99, 41, 39, 51, 52, 141, 93, 14, 160, 44, 33, 71, 55, 79, 80, 179, 9, 61, 111, 80, 32, 83, 91, 29, 19, 52, 150, 32, 91, 121, 25, 102, 44, 43, 94, 29, 38, 120, 85, 89, 25, 20, 125, 18, 173, 34, 55, 32, 65, 83, 30, 180, 13, 35, 95, 83, 39, 54, 81, 53, 119, 21, 40, 69, 45, 55, 38, 44, 45, 84, 29, 95, 79, 41, 19, 75, 64, 54, 14, 94, 10, 145, 81, 153, 58, 49, 132, 85, 85, 104, 40, 103, 25, 69, 30, 70, 15, 125, 50, 44, 38, 64, 9, 44, 93, 83, 179, 40, 58, 74, 15, 11, 41, 68, 28, 83, 40, 113, 89, 38, 62, 65, 40, 30, 20, 58, 150, 54, 19, 30, 123, 45, 154, 93, 71, 55, 38, 74, 69, 104, 38, 25, 162, 64, 30, 52, 42, 79, 34, 123, 160, 51, 108, 68, 42, 32, 22, 29, 69, 92, 40, 9, 128, 110, 171, 13, 25, 33, 34, 58, 51, 29, 111, 43, 130, 20, 101, 48, 92, 33, 51, 31, 83, 45, 89, 89, 9, 58, 80, 73, 41, 74, 29, 25, 98, 59, 43, 72, 134, 140, 39, 35, 141, 23, 134, 35, 42, 81, 14, 45, 79, 53, 33, 60, 8, 38, 154, 54, 41, 25, 53, 79, 13, 130, 93, 82, 15, 28, 9, 88, 143, 62, 51, 101, 90, 83, 21, 115, 32, 204, 34, 30, 31, 90, 79, 22, 42, 29, 72, 68, 78, 90, 14, 129, 39, 82, 31, 9, 15, 70, 84, 155, 89, 185, 82, 60, 58, 29, 32, 115, 83, 54, 112, 112, 23, 198, 84, 39, 129, 113, 35, 85, 73, 70, 39, 72, 68, 35, 61, 69, 59, 99, 130, 72, 44, 91, 92, 55, 20, 59, 8, 85, 94, 22, 74, 59, 12, 8, 74, 34, 63, 85, 31, 61, 88, 22, 63, 80, 78, 45, 51, 111, 45, 41, 69, 23, 160, 61, 110, 50, 49, 52, 53, 72, 51, 23, 41, 41, 138, 14, 145, 25, 43, 93, 90, 41, 63, 23, 75, 13, 10, 100, 85, 73, 130, 65, 59, 31, 134, 11, 32, 53, 28, 44, 40, 40, 163, 82, 89, 78, 55, 34, 58, 73, 54, 45, 93, 102, 39, 114, 29, 30, 22, 38, 41, 38, 25, 70, 201, 42, 64, 28, 119, 28, 60, 23, 39, 19, 72, 41, 32, 69, 23, 44, 32, 25, 80, 83, 133, 89, 81, 44, 119, 39, 40, 79, 30, 178, 82, 50, 64, 129, 68, 30, 48, 130, 40, 105, 41, 80, 134, 49, 63, 70, 32, 14, 111, 38, 121, 90, 20, 61, 43, 39, 60, 63, 8, 52, 111, 71, 25, 34, 74, 120, 50, 10, 45, 29, 145, 100, 24, 60, 50, 43, 79, 44, 31, 14, 19, 90, 21, 75, 175, 41, 79, 24, 39, 9, 15, 80, 63, 20, 43, 65, 91, 53, 110, 82, 23, 172, 88, 71, 39, 94, 25, 10, 42, 142, 34, 139, 154, 40, 33, 80, 10, 41, 30, 78, 164, 23, 149, 25, 42, 71, 70, 55, 29, 123, 8, 69, 79, 105, 39, 163, 9, 71, 51, 32, 60, 35, 41, 73, 49, 79, 120, 60, 78, 40, 68, 49, 65, 55, 62, 152, 42, 39, 82, 108, 59, 61, 78, 18, 113, 62, 81, 13, 75, 33, 179, 69, 45, 59, 81, 133, 81, 14, 28, 93, 155, 155, 68, 52, 51, 44, 121, 49, 42, 144, 72, 44, 43, 74, 145, 158, 78, 105, 100, 58, 113, 10, 142, 128, 88, 101, 70, 122, 70, 43, 31, 35, 81, 19, 98, 101, 81, 135, 34, 104, 29, 82, 62, 85, 8, 78, 44, 122, 22, 39, 55, 144, 71, 191, 22, 158, 75, 69, 39, 34, 32, 129, 54, 34, 45, 68, 53, 32, 31, 72, 30, 138, 18, 69, 58, 63, 43, 28, 38, 72, 64, 70, 12, 159, 103, 42, 48, 49, 89, 22, 10, 38, 49, 30, 82, 82, 24, 32, 34, 61, 22, 40, 50, 35, 64, 49, 44, 65, 13, 84, 28, 108, 59, 163, 69, 115, 118, 163, 140, 91, 61, 69, 22, 53, 25, 31, 83, 152, 30, 34, 44, 182, 44, 122, 35, 91, 30, 53, 28, 85, 28, 41, 41, 33, 59, 129, 35, 45, 62, 14, 53, 48, 128, 105, 40, 10, 102, 31, 30, 21, 44, 48, 21, 84, 64, 82, 39, 45, 152, 12, 32, 74, 54, 75, 95, 90, 20, 64, 85, 105, 21, 78, 158, 125, 81, 183, 54, 79, 38, 158, 20, 60, 113, 70, 84, 23, 141, 110, 31, 22, 91, 82, 23, 35, 18, 80, 74, 73, 40, 55, 69, 92, 48, 58, 109, 39, 33, 18, 63, 43, 70, 19, 39, 81, 34, 114, 55, 21, 50, 41, 8, 55, 40, 22, 44, 54, 75, 42, 133, 40, 34, 142, 64, 44, 95, 49, 12, 98, 42, 44, 124, 175, 22, 78, 54, 154, 42, 195, 80, 81, 89, 61, 25, 43, 122, 160, 83, 79, 30, 145, 151, 14, 19, 55, 182, 78, 42, 44, 53, 65, 43, 38, 50, 81, 41, 73, 31, 84, 95, 60, 43, 38, 82, 52, 43, 82, 161, 24, 102, 53, 85, 111, 90, 94, 63, 39, 205, 142, 163, 113, 64, 20, 179, 91, 80, 38, 44, 81, 95, 44, 88, 11, 92, 74, 72, 63, 172, 183, 40, 68, 78, 68, 49, 39, 151, 159, 89, 105, 78, 128, 81, 50, 38, 119, 110, 29, 19, 38, 31, 14, 39, 33, 92, 78, 42, 15, 48, 63, 149, 49, 125, 58, 48, 75, 114, 111, 62, 45, 113, 128, 81, 75, 21, 83, 121, 40, 101, 90, 68, 74, 74, 51, 149, 31, 85, 62, 44, 63, 23, 40, 78, 40, 78, 71, 23, 15, 28, 23, 19, 42, 113, 34, 19, 43, 44, 21, 115, 81, 91, 30, 55, 48, 23, 21, 55, 21, 40, 30, 78, 65, 50, 55, 111, 21, 65, 114, 54, 75, 13, 54, 22, 198, 18, 74, 61, 64, 10, 82, 61, 83, 73, 22, 91, 65, 13, 103, 95, 31, 38, 104, 38, 30, 19, 25, 20, 83, 18, 62, 24, 13, 64, 62, 88, 28, 52, 82, 140, 80, 58, 180, 55, 65, 62, 23, 35, 35, 74, 14, 83, 71, 53, 103, 109, 60, 12, 141, 128, 98, 41, 90, 31, 74, 83, 35, 140, 65, 35, 73, 29, 55, 20, 70, 81, 25, 119, 49, 38, 80, 84, 61, 60, 83, 59, 32, 33, 19, 14, 154, 33, 28, 44, 81, 29, 58, 38, 82, 18, 45, 64, 48, 24, 65, 111, 114, 39, 19, 22, 49, 40, 63, 55, 33, 31, 24, 81, 81, 113, 92, 81, 101, 78, 78, 35, 9, 82, 41, 84, 42, 54, 84, 131, 85, 84, 114, 61, 39, 21, 68, 85, 180, 110, 65, 81, 132, 44, 98, 62, 91, 29, 101, 65, 58, 32, 44, 113, 38, 13, 62, 29, 23, 11, 90, 43, 59, 28, 28, 108, 78, 65, 25, 108, 43, 95, 24, 190, 24, 41, 80, 63, 79, 114, 120, 104, 20, 41, 35, 22, 132, 32, 21, 49, 79, 30, 118, 11, 61, 43, 54, 33, 84, 110, 14, 65, 78, 18, 95, 95, 191, 19, 19, 39, 93, 112, 40, 45, 133, 85, 18, 54, 41, 21, 152, 53, 84, 59, 33, 81, 61, 88, 170, 83, 44, 83, 21, 143, 103, 162, 73, 25, 115, 88, 73, 94, 58, 81, 113, 35, 65, 170, 62, 54, 39, 28, 95, 21, 50, 34, 19, 71, 113, 9, 118, 79, 72, 18, 93, 62, 23, 40, 34, 114, 125, 41, 38, 45, 12, 115, 175, 24, 28, 32, 63, 32, 60, 53, 58, 42, 39, 72, 80, 39, 18, 30, 54, 128, 38, 120, 25, 85, 14, 70, 23, 31, 132, 28, 91, 191, 88, 84, 64, 28, 149, 42, 53, 113, 79, 175, 38, 52, 42, 13, 141, 131, 64, 49, 34, 91, 195, 53, 39, 20, 104, 51, 38, 12, 28, 33, 31, 44, 49, 134, 114, 90, 105, 58, 53, 15, 103, 58, 83, 61, 69, 89, 70, 39, 41, 148, 38, 129, 84, 29, 30, 90, 150, 15, 13, 9, 24, 41, 25, 49, 58, 141, 50, 61, 65, 112, 19, 23, 60, 30, 194, 109, 174, 34, 84, 41, 92, 19, 55, 22, 155, 72, 81, 30, 54, 60, 68, 65, 31, 29, 43, 80, 43, 194, 24, 32, 30, 64, 15, 70, 32, 84, 62, 33, 65, 33, 15, 45, 132, 29, 65, 52, 64, 73, 20, 44, 79, 104, 88, 51, 61, 23, 38, 75, 42, 45, 59, 9, 62, 202, 162, 93, 145, 149, 69, 30, 48, 42, 132, 81, 60, 45, 70, 71, 28, 83, 131, 82, 79, 51, 111, 93, 73, 24, 64, 104, 38, 191, 53, 74, 21, 80, 41, 79, 32, 38, 85, 93, 69, 32, 61, 125, 30, 104, 24, 22, 59, 164, 60, 43, 70, 51, 59, 22, 29, 18, 65, 65, 38, 110, 22, 43, 30, 134, 32, 139, 45, 62, 51, 93, 122, 45, 179, 64, 41, 58, 64, 28, 21, 60, 78, 59, 59, 83, 128, 95, 78, 30, 51, 35, 74, 43, 23, 20, 112, 74, 65, 124, 65, 73, 8, 53, 13, 60, 45, 39, 78, 43, 31, 82, 112, 10, 18, 72, 72, 78, 78, 30, 45, 80, 174, 51, 181, 78, 79, 119, 49, 100, 70, 52, 12, 82, 34, 112, 42, 83, 199, 29, 70, 25, 84, 81, 15, 54, 83, 62, 134, 75, 109, 152, 83, 52, 31, 98, 14, 64, 109, 118, 80, 51, 83, 90, 28, 82, 24, 71, 80, 109, 140, 39, 39, 50, 31, 35, 44, 35, 20, 10, 83, 203, 84, 41, 164, 152, 62, 12, 28, 52, 19, 35, 28, 70, 140, 102, 50, 61, 44, 12, 69, 132, 128, 44, 44, 34, 132, 158, 83, 28, 31, 40, 71, 42, 35, 81, 91, 75, 54, 43, 94, 84, 34, 15, 99, 15, 83, 83, 143, 81, 39, 62, 64, 29, 64, 21, 64, 40, 61, 44, 78, 25, 125, 63, 54, 92, 119, 40, 41, 81, 101, 25, 55, 43, 98, 112, 69, 79, 118, 81, 19, 63, 102, 40, 44, 59, 224, 64, 129, 43, 12, 53, 39, 65, 18, 55, 60, 42, 44, 111, 62, 44, 69, 62, 35, 91, 12, 89, 65, 82, 48, 20, 91, 122, 22, 43, 38, 61, 33, 145, 170, 55, 40, 68, 53, 63, 123, 13, 12, 53, 79, 89, 62, 40, 23, 62, 69, 124, 52, 134, 58, 45, 75, 23, 48, 145, 31, 38, 78, 94, 84, 22, 78, 75, 71, 24, 112, 53, 41, 25, 42, 51, 19, 90, 89, 22, 119, 18, 32, 19, 90, 59, 84, 13, 88, 34, 11, 80, 41, 90, 81, 60, 39, 22, 32, 28, 35, 189, 40, 88, 124, 23, 23, 139, 42, 161, 28, 42, 81, 82, 53, 42, 64, 90, 44, 29, 93, 69, 82, 13, 72, 54, 104, 44, 40, 190, 64, 9, 38, 72, 82, 48, 82, 14, 162, 54, 90, 64, 65, 113, 38, 65, 39, 174, 59, 43, 24, 50, 68, 61, 21, 21, 31, 70, 25, 78, 19, 23, 40, 22, 71, 58, 75, 40, 83, 99, 59, 53, 11, 71, 85, 49, 122, 171, 8, 59, 49, 92, 75, 60, 41, 40, 81, 52, 25, 139, 54, 81, 73, 30, 59, 21, 65, 41, 52, 84, 135, 18, 34, 85, 23, 65, 195, 40, 95, 23, 82, 53, 10, 75, 23, 133, 129, 85, 168, 83, 52, 114, 81, 32, 63, 70, 20, 138, 63, 85, 80, 53, 72, 91, 148, 28, 193, 22, 74, 70, 11, 61, 41, 23, 30, 44, 49, 75, 43, 59, 75, 75, 88, 11, 22, 49, 140, 99, 82, 10, 109, 45, 93, 39, 21, 31, 31, 52, 13, 21, 50, 81, 74, 89, 82, 88, 61, 139, 29, 51, 58, 21, 43, 104, 9, 39, 89, 21, 29, 43, 30, 39, 83, 58, 8, 39, 204, 45, 111, 83, 83, 115, 60, 53, 134, 91, 91, 128, 78, 161, 60, 161, 40, 68, 74, 55, 145, 24, 10, 138, 63, 54, 62, 81, 61, 68, 78, 165, 48, 52, 18, 42, 18, 40, 44, 11, 108, 12, 19, 150, 89, 83, 79, 102, 155, 138, 51, 80, 135, 34, 62, 173, 149, 20, 42, 28, 95, 95, 34, 41, 150, 91, 84, 73, 122, 73, 20, 134, 98, 54, 41, 14, 93, 79, 79, 62, 95, 60, 75, 85, 143, 34, 44, 31, 13, 52, 42, 102, 10, 44, 158, 12, 59, 92, 82, 44, 121, 38, 92, 53, 45, 63, 181, 33, 22, 99, 44, 101, 32, 59, 25, 29, 35, 75, 58, 41, 42, 55, 18, 75, 85, 43, 149, 25, 19, 18, 13, 41, 139, 62, 51, 71, 45, 53, 64, 39, 38, 85, 61, 23, 122, 72, 123, 40, 62, 113, 81, 59, 25, 25, 14, 19, 61, 21, 44, 42, 52, 112, 34, 83, 24, 71, 75, 153, 75, 19, 31, 65, 8, 92, 85, 149, 9, 40, 54, 140, 18, 12, 140, 24, 60, 50, 44, 51, 34, 33, 63, 22, 75, 75, 62, 48, 73, 135, 61, 78, 40, 44, 45, 18, 53, 11, 38, 28, 35, 81, 90, 115, 78, 30, 39, 69, 29, 54, 60, 99, 51, 53, 79, 90, 18, 73, 59, 40, 41, 53, 128, 35, 28, 155, 195, 50, 48, 81, 50, 21, 142, 64, 91, 74, 82, 45, 85, 133, 22, 24, 38, 80, 33, 41, 90, 89, 8, 85, 53, 20, 9, 25, 114, 41, 49, 12, 50, 30, 32, 41, 25, 29, 50, 79, 110, 40, 18, 48, 40, 19, 35, 19, 83, 39, 38, 63, 85, 14, 64, 124, 20, 33, 80, 35, 74, 32, 73, 41, 18, 28, 64, 44, 109, 71, 79, 30, 82, 101, 13, 59, 64, 188, 28, 131, 19, 44, 49, 99, 95, 81, 73, 193, 41, 80, 90, 41, 102, 59, 69, 49, 61, 59, 85, 13, 44, 53, 31, 101, 61, 68, 21, 149, 75, 55, 81, 179, 42, 199, 18, 28, 80, 79, 52, 18, 52, 15, 84, 114, 41, 29, 23, 84, 60, 13, 45, 83, 58, 148, 92, 62, 50, 29, 85, 78, 85, 89, 33, 42, 31, 35, 22, 45, 119, 43, 75, 121, 63, 58, 155, 69, 38, 9, 69, 199, 38, 129, 59, 115, 83, 65, 72, 72, 63, 64, 194, 104, 180, 18, 93, 32, 68, 38, 115, 161, 154, 68, 44, 149, 103, 41, 113, 48, 69, 43, 19, 65, 32, 20, 25, 70, 70, 103, 61, 170, 49, 62, 102, 8, 91, 10, 35, 71, 59, 14, 122, 81, 35, 83, 121, 35, 88, 70, 63, 125, 21, 75, 38, 58, 31, 18, 29, 29, 69, 121, 64, 84, 65, 85, 44, 174, 178, 55, 25, 21, 72, 129, 18, 91, 38, 21, 38, 154, 178, 85, 93, 151, 78, 135, 40, 80, 18, 74, 94, 88, 82, 54, 45, 39, 20, 93, 85, 95, 48, 22, 33, 40, 30, 22, 20, 49, 25, 150, 32, 9, 23, 18, 42, 39, 84, 43, 28, 59, 29, 39, 42, 24, 62, 33, 73, 88, 58, 48, 40, 160, 39, 53, 32, 32, 11, 60, 41, 99, 83, 134, 85, 41, 44, 62, 149, 25, 84, 81, 181, 62, 11, 60, 42, 83, 109, 70, 25, 72, 183, 44, 52, 18, 40, 41, 81, 128, 65, 145, 65, 119, 124, 33, 41, 105, 130, 80, 115, 62, 34, 18, 44, 25, 52, 71, 61, 62, 33, 28, 53, 69, 165, 75, 54, 53, 41, 43, 79, 24, 73, 50, 28, 64, 49, 121, 58, 51, 61, 35, 39, 74, 201, 81, 44, 19, 85, 74, 54, 58, 18, 88, 19, 49, 101, 138, 25, 120, 153, 28, 110, 94, 48, 123, 33, 42, 68, 28, 42, 28, 73, 89, 82, 83, 28, 39, 110, 55, 111, 94, 85, 81, 94, 162, 80, 70, 19, 109, 12, 33, 49, 42, 41, 43, 64, 19, 65, 53, 32, 22, 39, 59, 50, 19, 55, 81, 108, 98, 110, 33, 34, 69, 41, 60, 95, 73, 41, 68, 64, 29, 31, 54, 63, 92, 195, 45, 72, 98, 30, 78, 43, 85, 38, 58, 92, 13, 218, 75, 40, 15, 24, 49, 83], \"y0\": \" \", \"yaxis\": \"y\"}, {\"alignmentgroup\": \"True\", \"hoverlabel\": {\"namelength\": 0}, \"hovertemplate\": \"Personal Loan=1<br>Edu_mark=%{x}<br>Income=%{y}\", \"legendgroup\": \"\", \"marker\": {\"color\": \"#636efa\"}, \"name\": \"\", \"notched\": false, \"offsetgroup\": \"\", \"orientation\": \"v\", \"showlegend\": false, \"type\": \"box\", \"x\": [\"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Undergrad\", \"Undergrad\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Graduate\", \"Undergrad\", \"Graduate\", \"Undergrad\", \"Advanced/Professional\", \"Undergrad\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Graduate\", \"Advanced/Professional\", \"Advanced/Professional\", \"Graduate\", \"Graduate\", \"Advanced/Professional\", \"Undergrad\"], \"x0\": \" \", \"xaxis\": \"x2\", \"y\": [180, 130, 193, 119, 141, 132, 194, 190, 131, 135, 133, 118, 149, 132, 134, 168, 148, 159, 158, 172, 170, 120, 170, 134, 111, 172, 159, 195, 165, 119, 101, 101, 99, 158, 173, 60, 155, 174, 133, 100, 179, 115, 113, 122, 183, 149, 83, 182, 152, 173, 69, 122, 131, 175, 161, 152, 170, 115, 165, 122, 129, 185, 105, 164, 109, 132, 114, 152, 138, 109, 172, 165, 135, 192, 158, 194, 202, 132, 130, 150, 124, 182, 120, 161, 172, 195, 95, 193, 129, 83, 169, 135, 174, 83, 142, 185, 99, 192, 118, 122, 110, 145, 175, 145, 83, 138, 125, 75, 175, 191, 188, 182, 104, 171, 73, 134, 143, 120, 181, 94, 112, 103, 71, 123, 190, 165, 118, 169, 130, 130, 113, 164, 192, 145, 179, 180, 171, 139, 135, 179, 190, 172, 183, 101, 129, 184, 154, 154, 160, 141, 178, 91, 191, 64, 155, 102, 114, 65, 122, 170, 184, 124, 192, 138, 111, 84, 154, 153, 93, 193, 152, 158, 182, 139, 190, 173, 139, 114, 125, 155, 128, 119, 171, 113, 98, 185, 112, 194, 161, 178, 179, 110, 125, 111, 191, 134, 118, 191, 181, 103, 128, 142, 170, 169, 103, 113, 180, 161, 134, 159, 160, 188, 174, 203, 178, 115, 168, 83, 99, 158, 183, 123, 189, 180, 193, 162, 183, 190, 150, 131, 168, 105, 172, 114, 170, 170, 182, 129, 130, 201, 89, 184, 123, 109, 184, 185, 125, 138, 169, 140, 108, 123, 161, 164, 179, 168, 178, 92, 111, 104, 98, 171, 90, 180, 114, 149, 152, 161, 161, 110, 160, 111, 191, 154, 131, 148, 119, 131, 158, 173, 195, 183, 130, 185, 168, 115, 154, 182, 185, 183, 133, 181, 190, 172, 184, 188, 114, 122, 113, 140, 190, 102, 130, 132, 195, 162, 121, 153, 103, 164, 148, 169, 130, 158, 141, 134, 168, 129, 179, 131, 175, 114, 124, 99, 158, 173, 94, 111, 179, 93, 159, 140, 141, 132, 105, 153, 174, 164, 141, 125, 115, 163, 182, 135, 142, 82, 135, 125, 172, 149, 120, 133, 154, 182, 125, 95, 144, 118, 169, 139, 153, 165, 128, 130, 99, 148, 154, 141, 140, 120, 129, 160, 184, 131, 118, 83, 142, 108, 135, 115, 188, 178, 131, 129, 158, 142, 139, 179, 188, 123, 119, 123, 123, 93, 182, 85, 95, 93, 154, 173, 191, 175, 142, 180, 155, 179, 138, 141, 180, 123, 163, 108, 135, 144, 139, 143, 154, 91, 89, 173, 155, 158, 194, 195, 191, 130, 85, 128, 132, 188, 170, 143, 182, 184, 140, 141, 145, 181, 178, 145, 164, 164, 104, 111, 145, 182, 133, 120, 115, 83, 180, 151, 133, 81, 102, 134, 130, 142, 143, 184, 188, 162, 108, 141, 140, 173, 101, 123, 184, 115, 174, 135, 165, 133, 142, 129, 121, 112, 122, 135], \"y0\": \" \", \"yaxis\": \"y2\"}],\n",
              "                        {\"annotations\": [{\"font\": {}, \"showarrow\": false, \"text\": \"Personal Loan=0\", \"x\": 0.245, \"xanchor\": \"center\", \"xref\": \"paper\", \"y\": 1.0, \"yanchor\": \"bottom\", \"yref\": \"paper\"}, {\"font\": {}, \"showarrow\": false, \"text\": \"Personal Loan=1\", \"x\": 0.755, \"xanchor\": \"center\", \"xref\": \"paper\", \"y\": 1.0, \"yanchor\": \"bottom\", \"yref\": \"paper\"}], \"boxmode\": \"group\", \"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 0.49], \"title\": {\"text\": \"Edu_mark\"}}, \"xaxis2\": {\"anchor\": \"y2\", \"domain\": [0.51, 1.0], \"matches\": \"x\", \"title\": {\"text\": \"Edu_mark\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"Income\"}}, \"yaxis2\": {\"anchor\": \"x2\", \"domain\": [0.0, 1.0], \"matches\": \"y\", \"showticklabels\": false}},\n",
              "                        {\"responsive\": true}\n",
              "                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('f3c5c4a6-4140-444c-8e09-1d65c6d6af00');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })\n",
              "                };\n",
              "                \n",
              "            </script>\n",
              "        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Inference:From the above plot we could say that Income of customers who availed personal loan are alomst same irrescpective of their Education"
      ],
      "metadata": {
        "id": "KqFMnZU2OmRL"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12,8))\n",
        "sns.distplot(data[data['Personal Loan']==0]['Income'],hist=False,label='Income With no personal Loan')\n",
        "sns.distplot(data[data['Personal Loan']==1]['Income'],hist=False,label='Income With personal Loan')\n",
        "plt.legend()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 672
        },
        "id": "SOva3-BhNxjR",
        "outputId": "95011386-b28d-4c0d-e170-d96008660bcf"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning:\n",
            "\n",
            "`distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n",
            "\n",
            "/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning:\n",
            "\n",
            "`distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7f1445a54d10>"
            ]
          },
          "metadata": {},
          "execution_count": 55
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Conclusion: Customers Who have availed personal loan seem to have higher income than those who do not have personal loan"
      ],
      "metadata": {
        "id": "zTjYKrSZPb3R"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data.columns"
      ],
      "metadata": {
        "id": "uEyoz3dbPKPm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "col_names=['Securities Account','Online','Account_holder_category','CreditCard']"
      ],
      "metadata": {
        "id": "MKvCj9BWaeeK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for i in col_names:\n",
        "    plt.figure(figsize=(10,5))\n",
        "    sns.countplot(x=i,hue='Personal Loan',data=data)"
      ],
      "metadata": {
        "id": "-DQd6uYLaf9O"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Perform Hypothesis Testing"
      ],
      "metadata": {
        "id": "OWu8Qmlyaown"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Q.. How Age of a person is going to be a factor in availing loan ??? Does Income of a person have an impact on availing loan ??? Does the family size makes them to avail loan ???¶"
      ],
      "metadata": {
        "id": "5CXoOmkrarSc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import scipy.stats as stats"
      ],
      "metadata": {
        "id": "vATgvlEQaiQR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Ho='Age does not have impact on availing personal loan'\n",
        "Ha='Age does  have impact on availing personal loan'"
      ],
      "metadata": {
        "id": "9o41x7wjas7h"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Age_no=np.array(data[data['Personal Loan']==0]['Age'])\n",
        "Age_yes=np.array(data[data['Personal Loan']==1]['Age'])"
      ],
      "metadata": {
        "id": "kMJLejl4aunJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "t,p_value=stats.ttest_ind(Age_no,Age_yes,axis=0)\n",
        "if p_value<0.05:\n",
        "    print(Ha,' as the p_value is less than 0.05 with a value of {}'.format(p_value))\n",
        "else:\n",
        "    print(Ho,' as the p_value is greater than 0.05 with a value of {}'.format(p_value))"
      ],
      "metadata": {
        "id": "WA2cMk1bawLo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "automate above stuffs"
      ],
      "metadata": {
        "id": "pzLyPrfna0tu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def Hypothesis(col1,col2,HO,Ha):\n",
        "    arr1=np.array(data[data[col1]==0][col2])\n",
        "    arr2=np.array(data[data[col1]==1][col2])\n",
        "    t,p_value=stats.ttest_ind(arr1,arr2,axis=0)\n",
        "    if p_value<0.05:\n",
        "        print('{}, as the p_value is less than 0.05 with a value of {}'.format(Ha,p_value))\n",
        "    else:\n",
        "        print('{} as the p_value is greater than 0.05 with a value of {}'.format(HO,p_value))"
      ],
      "metadata": {
        "id": "b6sNigR7ayIY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Hypothesis('Personal Loan','Age',HO='Age does not have impact on availing personal loan',Ha='Age does  have impact on availing personal loan')"
      ],
      "metadata": {
        "id": "DOjckztWa22k"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Q..Income of a person has significant impact on availing Personal Loan or not?"
      ],
      "metadata": {
        "id": "JuHQwveWa9_d"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Hypothesis(col1='Personal Loan',col2='Income',HO='Income does not have impact on availing personal loan',Ha='Income does  have impact on availing personal loan')"
      ],
      "metadata": {
        "id": "1SHtTYfQa4uT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Income have phenomenal significance on availing personal Loan , As the P_value is less than 0.05 with a value of :0.0"
      ],
      "metadata": {
        "id": "dhQHwpuTbFj7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Q..Number of persons in the family has significant impact on availing Personal Loan or not?"
      ],
      "metadata": {
        "id": "ijQUFTRbbLqV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Hypothesis('Personal Loan','Family',HO='AgFamily does not have impact on availing personal loan',Ha='Family does  have impact on availing personal loan')"
      ],
      "metadata": {
        "id": "zAuVjgulbAcY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Family have phenomenal significance on availing personal Loan , As the P_value is less than 0.05 with a value of :1.4099040685673807e-05"
      ],
      "metadata": {
        "id": "HdxqcaIQbRaA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "bU4AtDCRbPhq"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}